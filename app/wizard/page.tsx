'use client'
export const dynamic = 'force-dynamic';
import { useState } from 'react';import { z } from 'zod'
const schema=z.object({name:z.string().min(2),sector:z.string().min(2),size:z.enum(['Micro','Small','Medium']),state:z.string().min(2),udyam:z.string().optional(),turnoverCr:z.coerce.number().optional(),compliance:z.string().optional()})
export default function Wizard(){const [out,setOut]=useState<any>(null);const [loading,setLoading]=useState(false);const submit=async(e:React.FormEvent)=>{e.preventDefault();const fd=new FormData(e.target as HTMLFormElement);const raw=Object.fromEntries(fd.entries());const parsed=schema.parse({name:raw.name,sector:raw.sector,size:raw.size,state:raw.state,udyam:raw.udyam||undefined,turnoverCr:raw.turnoverCr||undefined,compliance:raw.compliance||''});setLoading(true);const res=await fetch('/api/recommend',{method:'POST',body:JSON.stringify(parsed)});const data=await res.json();setOut(data);setLoading(false)};return(<div className='grid md:grid-cols-2 gap-6'><form className='card' onSubmit={submit}><h1 className='text-2xl font-semibold mb-2'>MSME Input Wizard</h1><div className='grid grid-cols-2 gap-3'><label className='col-span-2'>Name<input name='name' className='w-full border rounded p-2' required/></label><label className='col-span-2'>Sector<input name='sector' className='w-full border rounded p-2' required placeholder='Food processing, foundry, pharma, services...'/></label><label>Size<select name='size' className='w-full border rounded p-2'><option>Micro</option><option>Small</option><option>Medium</option></select></label><label>State<input name='state' className='w-full border rounded p-2' defaultValue='Goa'/></label><label>Udyam No.<input name='udyam' className='w-full border rounded p-2'/></label><label>Turnover (Cr)<input name='turnoverCr' className='w-full border rounded p-2' type='number' step='0.01'/></label><label className='col-span-2'>Compliance tags (comma-separated)<input name='compliance' className='w-full border rounded p-2' placeholder='consents:valid, iso14001:no'/></label></div><button className='btn mt-4' type='submit' disabled={loading}>{loading?'Generating...':'Generate Recommendations'}</button></form><div className='card'><h2 className='text-xl font-semibold mb-2'>Output</h2>{!out&&<p className='text-sm text-slate-600'>Fill the form to see tailored ESG roadmap & scheme mapping.</p>}{out&&(<div className='space-y-3 text-sm'><div><b>Applicable Schemes:</b> {out.schemes.join(', ')}</div><div><b>Mandatory:</b><ul className='list-disc ml-5'>{out.mandatory.map((x:string,i:number)=><li key={i}>{x}</li>)}</ul></div><div><b>Optional/Value-add:</b><ul className='list-disc ml-5'>{out.optional.map((x:string,i:number)=><li key={i}>{x}</li>)}</ul></div><div><b>30 days:</b><ul className='list-disc ml-5'>{out.actions30.map((x:string,i:number)=><li key={i}>{x}</li>)}</ul></div><div><b>60 days:</b><ul className='list-disc ml-5'>{out.actions60.map((x:string,i:number)=><li key={i}>{x}</li>)}</ul></div><div><b>90 days:</b><ul className='list-disc ml-5'>{out.actions90.map((x:string,i:number)=><li key={i}>{x}</li>)}</ul></div></div>)}</div></div>)}
