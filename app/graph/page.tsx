'use client'
export const dynamic = 'force-dynamic';
import { useEffect,useState } from 'react'
type Node={id:string,label:string,name:string};type Link={source:string,target:string,relation:string}
export default function GraphPage(){const [data,setData]=useState<{nodes:Node[],links:Link[]}|null>(null);useEffect(()=>{fetch('/api/graph').then(r=>r.json()).then(setData)},[]);const size=800,r=300,cx=size/2,cy=size/2;const positioned=(data?.nodes||[]).map((n,i,arr)=>{const a=(i/Math.max(1,arr.length))*2*Math.PI;return {...n,x:cx+r*Math.cos(a),y:cy+r*Math.sin(a)}});const pos:Record<string,{x:number,y:number,label:string}>={};positioned.forEach(p=>pos[p.id]={x:p.x,y:p.y,label:p.label});return(<div className='space-y-4'><h1 className='text-2xl font-semibold'>Scheme Linkages (Graph)</h1><p className='text-sm text-slate-600'>Relations: supports / unlocks / requires</p><div className='overflow-auto'><svg width={size} height={size} className='border rounded'>{(data?.links||[]).map((l,i)=>{const a=pos[l.source];const b=pos[l.target];if(!a||!b)return null;return(<g key={i}><line x1={a.x} y1={a.y} x2={b.x} y2={b.y} stroke='#cbd5e1' strokeWidth='2'/><text x={(a.x+b.x)/2} y={(a.y+b.y)/2} fontSize='10' textAnchor='middle' fill='#475569'>{l.relation}</text></g>)})}{positioned.map(n=>(<g key={n.id}><circle cx={n.x} cy={n.y} r='28' fill='#e6f7ef' stroke='#16a34a'/><text x={n.x} y={n.y} fontSize='10' textAnchor='middle' dominantBaseline='middle' fill='#064e3b'>{n.label.length>10?n.label.slice(0,10)+'â€¦':n.label}</text></g>))}</svg></div></div>)}
